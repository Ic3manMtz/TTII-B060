# Generated by Django 4.2.7 on 2023-11-17 03:17

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('aplicacion', '0005_planalimenticio_planfisico_tieneplanes_delete_prueba'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alimento',
            fields=[
                ('idalimento', models.AutoField(db_column='idAlimento', primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50)),
                ('proteinas', models.FloatField(blank=True, null=True)),
                ('carbohidratos', models.FloatField(blank=True, null=True)),
                ('kcal', models.IntegerField(blank=True, null=True)),
                ('grasas', models.FloatField(blank=True, null=True)),
                ('unidadmedida', models.CharField(blank=True, db_column='unidadMedida', max_length=50, null=True)),
            ],
            options={
                'db_table': 'Alimento',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contienealimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField()),
                ('porcion', models.FloatField()),
            ],
            options={
                'db_table': 'ContieneAlimento',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contieneejercicios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('series', models.IntegerField(blank=True, null=True)),
                ('repeticiones', models.IntegerField(blank=True, null=True)),
                ('tiempo', models.IntegerField(blank=True, null=True)),
                ('descanso', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ContieneEjercicios',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contieneplatillo',
            fields=[
                ('idplatillo', models.AutoField(db_column='idPlatillo', primary_key=True, serialize=False)),
                ('dia', models.DateField(blank=True, null=True)),
                ('checado', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ContienePlatillo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contienerutinas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'ContieneRutinas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ejercicio',
            fields=[
                ('idejercicio', models.AutoField(db_column='idEjercicio', primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50)),
                ('activacionmuscular', models.CharField(blank=True, db_column='activacionMuscular', max_length=50, null=True)),
            ],
            options={
                'db_table': 'Ejercicio',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Objetivoscorporales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pesoobjetivo', models.FloatField(blank=True, db_column='pesoObjetivo', null=True)),
                ('iccobjetivo', models.FloatField(blank=True, db_column='iccObjetivo', null=True)),
                ('imcobjetivo', models.FloatField(blank=True, db_column='imcObjetivo', null=True)),
                ('grasaobjetivo', models.IntegerField(blank=True, db_column='grasaObjetivo', null=True)),
                ('musculoobjetivo', models.IntegerField(blank=True, db_column='musculoObjetivo', null=True)),
                ('grasavisceralobjetivo', models.IntegerField(blank=True, db_column='grasaVisceralObjetivo', null=True)),
                ('fechalimite', models.DateField(blank=True, db_column='fechaLimite', null=True)),
            ],
            options={
                'db_table': 'ObjetivosCorporales',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rutinas',
            fields=[
                ('idrutina', models.AutoField(db_column='idRutina', primary_key=True, serialize=False)),
                ('fechainicio', models.DateField(db_column='fechaInicio')),
                ('fechatermino', models.DateField(db_column='fechaTermino')),
            ],
            options={
                'db_table': 'Rutinas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tiempocomida',
            fields=[
                ('idtiempocomida', models.AutoField(db_column='idTiempoComida', primary_key=True, serialize=False)),
                ('tiempo', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'TiempoComida',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tipoejercicio',
            fields=[
                ('idtipoejercicio', models.AutoField(db_column='idTipoEjercicio', primary_key=True, serialize=False)),
                ('tipo', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'TipoEjercicio',
                'managed': False,
            },
        ),
        migrations.AlterModelOptions(
            name='asesoradosporasesor',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='certificados',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='datoscorporales',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='estatus',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='invitacionenviada',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='planalimenticio',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='planfisico',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='registrardatos',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='rol',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='tieneplanes',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='usuario',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='valida',
            options={'managed': False},
        ),
    ]
